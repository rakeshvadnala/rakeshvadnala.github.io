<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_SP__Side_Nav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="Online">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Commonly Used Commands</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../zresources/tablestyles/breadcrumb_table.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-left.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-right.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/icon-print-gray.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../zresources/tablestyles/standardtable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../zresources/stylesheets/iiq_stylesheet.css" rel="stylesheet" type="text/css" />
        <script src="../resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../iiqlandingpage.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../zresources/tablestyles/breadcrumb_table.css');" class="TableStyle-Breadcrumb_Table" cellspacing="0">
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-Breadcrumb_Table-Body-Body1">
                                                <td class="TableStyle-Breadcrumb_Table-BodyB-Column1-Body1">
                                                    <div class="nocontent">
                                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="{title} topic link" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="TableStyle-Breadcrumb_Table-BodyA-Column1-Body1">
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: ;text-align: right;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img alt="Navigate previous" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img alt="Navigate next" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img alt="Print" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img alt="Expand all" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="console_2845060746_2302220"></a>Commonly Used Commands</h1>
                                        <p>This section lists and documents the syntax and actions of the most commonly-used console commands.</p>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Help and ?</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>These two commands list all the available console commands.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">?<br />help</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; ?<br /><br />&gt; help</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>	Lists all commands available in the console</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Exit and Quit</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>These two commands exit the console shell, returning the user to the operating system command prompt.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">exit<br />quit</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; exit<br /><br />&gt; quit</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Exits console shell and returns user to the operating system command prompt</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Source</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>source</b> command runs commands from a script file. The commands on each line in the file are executed by the console sequentially.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">source </span><i>filename</i>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">source c:\data\cmdfile.txt</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>	Runs the console commands in the <span class="code">c:\data\cmdfile.txt</span> file sequentially</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />List</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>list</b> command lists all objects of the specified class, constrained by any specified filter. If this command is specified without arguments, the command syntax is displayed, followed by a list of all available classes whose objects can be listed. This is helpful in locating objects within the system and in identifying object names to use as parameters on other commands.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">list </span><i>classname</i><span class="code"> [</span><i>filter</i><span class="code">]</span>
                                                                </p>
                                                                <p class="CellBody" style="margin-top: 7pt;font-family: 'Courier New';font-weight: normal;font-style: normal;font-size: 9pt;letter-spacing: 0em;color: #000000;text-decoration: none;"><span class="code">filter: xxx - names beginning with xxx</span>
                                                                </p>
                                                                <p class="CellBody" style="margin-top: 7pt;font-family: 'Courier New';font-weight: normal;font-style: normal;font-size: 9pt;letter-spacing: 0em;color: #000000;text-decoration: none;"><span class="code">        xxx* - names beginning with xxx</span>
                                                                </p>
                                                                <p class="CellBody" style="margin-top: 7pt;font-family: 'Courier New';font-weight: normal;font-style: normal;font-size: 9pt;letter-spacing: 0em;color: #000000;text-decoration: none;"><span class="code">        *xxx - names ending with xxx</span>
                                                                </p>
                                                                <p><span class="code">        *xxx* - names containing xxx</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; list application ent*</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>	Lists all application objects whose names begin with ent</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Get</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>get</b> command displays the XML representation of the named object. </p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">get </span><i>classname</i><span class="code"></span><i>&lt;objectname</i>re<span class="code"> or </span><i>ID&gt;</i></p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; get identity Adam.Kennedy</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Displays the Adam.Kennedy Identity in XML format</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p class="Note1">This command only displays the object to the console (stdout), it does not export the object. The output can be redirected to a file if the user has write access to the server's file system.</p>
                                                <p><code>&gt; get identity Adam.Kennedy &gt; c:\output\AdamKennedyID.xml</code>
                                                </p>
                                                <p>Other alternatives for getting the XML representation of an object into a text file include:</p>
                                                <ul>
                                                    <li>	copying and pasting contents of this command's stdout into a text file</li>
                                                    <li>retrieving the object's XML from the IdentityIQ Debug pages</li>
                                                    <li>using the <b>checkout</b> command (described next) to write the XML representation of an object to a text file</li>
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Checkout</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>checkout</b> command writes a copy of the XML representation of the requested object to the specified filename. The file can be used for review or for moving objects from one environment to another, for example, from the user acceptance testing environment to production. Organizations doing custom development on rules, workflows, etc. might use <b>checkout</b> to extract any of these objects to a file for modification.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">checkout </span><i>class name</i><span class="code"> &lt;</span><i>objectname</i><span class="code"> or </span><i>ID</i><span class="code">&gt; </span><i>file</i><span class="code"> [-clean [=id,created…]]</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">	&gt; checkout rule “Cert Signoff Approver” certrule.xml</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Writes a copy of the Cert Signoff Approver rule's XML representation to the file <span class="code">certrule.xml</span></p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>The <b>-clean</b> option can be used to remove all values that do not transfer between IdentityIQ instances, such as created and modified dates as well as globally unique ID values (GUIDs). Specifying the <b>-clean</b> option with no qualifiers cleans the id, created, modified, and lastRefresh attributes. The <b>-clean</b> option can also be used to explicitly clear specific fields by name. The fields to clear must be listed in a comma separated list.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Checkin</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>checkin</b> command reads a file containing an object's XML representation and saves the object into the database. If the object is a workItem, the command invokes the workflower to process the workItem. If the object is a bundle (role) and the approve parameter is specified, a role approval workflow is launched. For all other object types, and for bundles that are submitted without the approve parameter, the object is saved into the database.</p>
                                                <p class="Note1">The command's syntax parsing allows the approve parameter to be specified for any object but it only impacts the processing on Bundle objects.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">checkin </span><i>filename</i><span class="code"> [approve] </span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; checkin newRole.xml approve</span>
                                                                    <br />
                                                                    <br /><span class="code">&gt; checkin bobSmithID.xml</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>First example saves Identity Bob Smith, as represented by the XML in bobSmithID.xml, into to the database; overwrites existing or adds new record<br /><br />Second example launches an approval workflow for the bundle object represented by the XML in newRole.xml</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p class="Note1">If an Import file is specified as the input file for this command, only the first object in the file is checked in; the rest are ignored and a warning message is displayed to the console (stdout).</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Delete</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p class="Note1"><b>This action cannot be undone and should be used with extreme caution and only in rare circumstances</b>.</p>
                                                <p>The <b>delete</b> command deletes the named object and removes all of its owned, or subordinate, objects. In a production environment, this is not recommended unless specifically directed by IdentityIQ Support.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">delete </span><i>classname</i><span class="code"> &lt;</span><i>objectname</i><span class="code"> or </span><i>ID</i><span class="code">&gt;</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; delete identity bob.smith</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Removes Identity Bob Smith and all of his associated objects from the system</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p class="Note1">Wildcards can be used on the &lt;<i>object name</i> or <i>ID</i>&gt; argument:<br />— * - all objects of the specified class (use with extreme caution!)<br />— xxx - all objects whose name or ID contains xxx</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Import</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>import</b> command imports objects into IdentityIQ from an XML file. This command can be used on a file that contains a Jasper report, a IdentityIQ import file, or an object of one of the standard object classes. The file contents are evaluated and processed based on the first tag in the file:</p>
                                                <ul>
                                                    <li><i>JasperReport</i>: Jasper report</li>
                                                    <li><i>IdentityIQ</i>: IdentityIQ import object; can contain multiple regular objects in one file as well as an ImportAction tag that directs how the contents of the file are processed, for example, merge, include, execute, logConfig.</li>
                                                    <li>Anything else: assumed to be a single regular object </li>
                                                </ul>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">import [-noids] </span><i>filename</i>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; import init.xml</span>
                                                                    <br />
                                                                    <br /><span class="code">&gt; import -noids init.xml</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>The first example Imports the contents of the file <span class="code">init.xml</span> into the IdentityIQ database.<br /><br />In the second example, all ID attributes are removed before parsing occurs.<br /></p>
                                                                <p>This action is a normal part of the initialization process for IdentityIQ.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">import [-noids][-noroleevents] </span><i>filename</i>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; import -noids bundles.xml</span>
                                                                    <br />
                                                                    <br /><span class="code">&gt; import -noids -noroleevents bundles.xml</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>The first example allows user to import the events. It removes all ID attributes before parsing.</p>
                                                                <p>The second example disables generation of role change events for role propagation.</p>
                                                                <p>Select ‘Allow Role Propagation’ option from the Global Settings -&gt; IdentityIQ Configuration -&gt; Roles option in UI.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>This is one of the most commonly used commands. Installations who manage their workflows and rules in an external source code control system, for example, use this command to bring changes to those objects into IdentityIQ once they have been modified in their external XML representations.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Export</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>export</b> command writes all objects of a given class to a specified filename. This is commonly used in gathering objects from IdentityIQ to deliver to IdentityIQ Support as resources in resolving tickets. It is also used for moving sets of objects between environments and for managing objects outside of IdentityIQ, such as storing workflows and rules in a source code control system. </p>
                                                <p>More than one class can be exported at a time to the same file by specifying all the desired class names as arguments to the command. If the <b>export</b> command is specified without any class names, all objects of all classes are exported to the specified filename.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">export [-clean[=id,created...]] </span><i>filename</i><span class="code"> [</span><i>classname</i><span class="code"></span><i>classname</i><span class="code"> …]</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; export -clean workflows.xml workflow</span>
                                                                </p>
                                                                <p><span class="code">&gt; export IdLink.xml identity link</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>The first example exports the entire set of workflow objects from IdentityIQ to the file <span class="code">workflows.xml</span>, removing values from the id, created, modified, and lastRefresh attributes.</p>
                                                                <p>The second example exports all identities and links to a single file.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />ListLocks</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>listLocks</b> command lists all locks held on any objects of the named class. At this time, Identity is the only class for which this command operates.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />BreakLocks</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p class="Note1">This command should be used with caution. Locks are useful in maintaining data integrity, and breaking them at the wrong time can potentially permit conflicting updates that can result in data corruption.</p>
                                                <p class="Note1">The unlock command can be used to break a single lock whereas this command breaks all locks held on any object in the specified class.</p>
                                                <p>If a process is holding a lock but is unable to perform the required action, the lock can cause problems in other processes' performance as well. The <b>breakLocks</b> command can be used to release locks forcibly. At this time, Identity is the only class for which this command functions.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">breakLocks </span><i>classname</i>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; breakLocks identity</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Releases all locks held on any identity object in the system and reports to the console the identity name, lock holder, and UTIME value for the lock date/time and the lock expiration date/time.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Rule</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>rule</b> command runs a rule defined in the system. The rule to run is specified as a command parameter. If any input variables must be passed to the rule, they must be entered in a variable file, specified as an XML Map. The file name is then also passed as a parameter to the command. </p>
                                                <p>This command can be used for testing or executing existing system rules. It can also be used to run any BeanShell code snippet against the IdentityIQ database. The code is created as a rule and loaded into the system and then executed from the console. Support uses rules like this for data cleanup.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">rule &lt;</span><i>rulename</i><span class="code"> or </span><i>ID&gt;</i><span class="code"> [</span><i>varfile</i><span class="code">]</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; rule “Check Password Policy” c:\data\pwdParams.xml</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>	Runs the Check Password Policy rule, passing its input variables through the file <span class="code">c:\data\pwdParams.xml</span></p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Parse</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>parse</b> command validates an XML file. If it is in valid form and its tags match the IdentityIQ DTD, it runs successfully and no information is printed to the console (<span class="code">stdout</span>). If errors are encountered, a runtimeException is printed to the console describing the error.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Syntax</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><span class="code">parse </span><i>filename</i>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>	Examples	</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><span class="code">&gt; parse c:\data\newWorkflow.xml</span>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Result</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>	Validates the XML in the file <span class="code">c:\data\newWorkflow.xml</span> and reports any errors to the console</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />
Rolerelationship</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The <b>rolerelationship</b> command lets you view, search, and rebuild relationships between roles and their entitlement profiles, required roles, inherited roles, and permitted roles.</p>
                                                <p><b>Syntax</b>
                                                </p>
                                                <p>This command requires a subcommand to specify the particular action you want the command to take.</p>
                                                <p>Details about subcommands and their options are provided below; the general syntax for running the command with a subcommand is:</p>
                                                <p><code>rolerelationship <i>subcommand</i></code>
                                                </p>
                                                <h4>Help</h4>
                                                <p>This subcommand returns help details about other subcommands and their usage details.</p>
                                                <p><b>Syntax</b>: <code> rolerelationship help</code></p>
                                                <h4>Index</h4>
                                                <p>This subcommand builds Bundle Profile Relation records, based on the provided role name, ID or type. Bundle Profile Relation records provide a snapshot-level view of a role and its relationships to entitlements, required roles, inherited roles, permitted roles, and managed attributes. This command runs the Refresh Role-Entitlement Associations task, with the filters that are specified in the command syntax applied.</p>
                                                <p>Note that the only function currently supported is the build function, which must be included in the command syntax.</p>
                                                <p><b>Syntax</b>: <code>rolerelationship index <i>[function] [filter]</i></code></p>
                                                <p>Two filter options can be used with the index subcommand. Wildcards are not supported in these filters.</p>
                                                <ul>
                                                    <li>
                                                        <p><code>role_name</code> : The role name or ID. Role names that include a space must be enclosed in single quotes (for example, <code>'Payroll Approver'</code>).</p>
                                                    </li>
                                                    <li>
                                                        <p><code>role_type</code> : The role type, such as <b>business</b> or <b>it</b></p>
                                                    </li>
                                                </ul>
                                                <p><b>Examples</b>
                                                </p>
                                                <p><code>rolerelationship index build -role_name 'Payroll Approver'</code>
                                                </p>
                                                <p><code>rolerelationship index build -role_type it</code>
                                                </p>
                                                <p><code>rolerelationship index build -role_name 'Tax Manager' -role_type business</code>
                                                </p>
                                                <h4>Search</h4>
                                                <p>This subcommand searches for roles using search filters and parameters. You can use a variety of filters and fixed-value parameters to search for roles and role relationships. The -l option returns results in a list view, suppressing entitlement and status information in the results, so that relationship data is not displayed. </p>
                                                <p><![CDATA[
]]><b>Syntax:</b><code>rolerelationship search <i>[filter] [-l]</i></code><![CDATA[
]]></p>
                                                <p style="font-weight: bold;">Filters for the Search Subcommand</p>
                                                <p>Use filters to search for roles based on a variety of criteria. Filters can be combined with fixed values (which are described in a later table) to refine your searches.</p>
                                                <p class="Option">applications</p>
                                                <p class="Option_Def">Syntax is <code>-app &lt;app_name_or_id&gt;</code> or <code>-app_status &lt;app_status&gt;</code>. </p>
                                                <p class="Option_Def"><![CDATA[	]]><code>- app &lt;app_name_or_id&gt;</code> returns all roles that have entitlements from the provided application.</p>
                                                <p class="Option_Def"><![CDATA[	]]><code> -app_status &lt;app_status&gt;</code> returns all roles that have entitlements from the provided application with this type of status.</p>
                                                <p class="Option">roles	</p>
                                                <p class="Option_Def">Syntax is <code>-role_name &lt;role_name_or_id&gt;</code> or <code>-role_type &lt;role_type&gt;</code></p>
                                                <p class="Option_Def"><code>-role_name &lt;role_name_or_id&gt;</code> returns roles matching the provided role name or id.</p>
                                                <p class="Option_Def"><![CDATA[	]]><code>-role_type &lt;role_type&gt;</code> returns roles of this type. Options are <b>it</b>, <b>business</b>, <b>assignOrDetect</b>, <b>rapidSetupBirthright</b>, or any custom role types that are requestable.</p>
                                                <p class="Option_Def">	Roles  supports wildcard search using %</p>
                                                <p class="Option">entitlements</p>
                                                <p class="Option_Def">Syntax is <code>-ent_attr &lt;attribute&gt; </code>or <code>-ent_value &lt;value&gt;</code><![CDATA[		]]></p>
                                                <p class="Option_Def"><code>-ent_attr &lt;attribute&gt;</code> filters by type of profile = entitlement. Options are <b>group</b>, <b>groupmbr</b>, and <b>memberOf</b>.</p>
                                                <p class="Option_Def"><code>-ent_value &lt;value&gt;</code> filters by type of profile = entitlement and returns only entitlements that contain this value.</p>
                                                <p class="Option_Def">Entitlements supports wildcard search using %</p>
                                                <p class="Option">permissions</p>
                                                <p class="Option_Def">Syntax is <code>-perm_right &lt;right&gt;</code> or <code>-perm_target &lt;target&gt;</code><![CDATA[	]]></p>
                                                <p class="Option_Def"><code>	-perm_right &lt;right&gt;</code> filters by type of profile = permission. Options are <b>create</b>,  <b>delete</b>, <b>execute</b>, <b>read</b>, and <b>update</b>.</p>
                                                <p class="Option_Def"><code>	-perm_target &lt;target&gt;</code> filter by type of profile = permission (options are targets defined on entitlement permissions).</p>
                                                <p class="Option_Def">Permissions supports wildcard search using %</p>
                                                <p class="Option">relationships</p>
                                                <p class="Option_Def">Syntax is <code>-inheritance &lt;inheritance&gt;</code> or <code>-rel2role &lt;relationship_to_role&gt;</code></p>
                                                <p class="Option_Def"><code>	-inheritance &lt;inheritance&gt;</code> filters by relationship and inheritance. Options are <b>SELF_ONLY</b> which defines privileges derived from role only (directly), or <b>INHERITED_ONLY</b> which defines privileges derived only through inheritance.</p>
                                                <p class="Option_Def"><code>-rel2role &lt;relationship_to_role&gt;</code> filters by relationship of the profile to the role. Options are:</p>
                                                <p class="Option_Def">
                                                    <ul>
                                                        <li>
                                                            <p class="Option_Def"><b>ANY</b> ignores all relationships and displays all</p>
                                                        </li>
                                                        <li>
                                                            <p class="Option_Def"><b>SELF_ONLY</b> only shows roles that have the entitlements/permissions directly on them</p>
                                                        </li>
                                                        <li>
                                                            <p class="Option_Def"><b>SELF_AND_SPECIFIC_RELATED</b>  shows roles that have the entitlements/permissions directly on it OR a specific relationship (inherited, permitted, required).</p>
                                                        </li>
                                                        <li>
                                                            <p class="Option_Def"><b>ALL_RELATED_ONLY</b> only shows roles that have the entitlement/permission through a specific relationship (relationship cannot be selected in additional filters), not on the role directly, only via derived roles.</p>
                                                        </li>
                                                        <li>
                                                            <p class="Option_Def"><b>SPECIFIC_RELATED_ONLY</b> only shows roles that have the entitlement/permission through a specific relationship (relationship can be selected in additional filters), not on the role itself.</p>
                                                        </li>
                                                        <li>
                                                            <p class="Option_Def">The <code>-rel2role</code> options [ <b>ANY</b> | <b>SELF_ONLY</b> | <b>ALL_RELATED_ONLY</b> ] are incompatible with specified [ <code>inheritance </code>| <code>req_perm_type</code> ] filters other than <b>ANY</b>.</p>
                                                        </li>
                                                    </ul>
                                                </p>
                                                <p class="Option">relationship types</p>
                                                <p class="Option_Def">Syntax is <code>-ent_perm_type &lt;relation_type&gt;</code></p>
                                                <p class="Option_Def">Filter by type of entitlement within role. Options are <b>entitlement</b> or <b>permission</b>.</p>
                                                <p class="Option_Def">Value of <b>permission</b> is incompatible with <code>ent_attr</code> and <code>ent_value</code> criteria.</p>
                                                <p class="Option_Def">Value of <b>entitlement</b> is incompatible with <code>perm_right</code> and <code>perm_target</code> criteria.</p>
                                                <p class="Option">required or permission</p>
                                                <p class="Option_Def">Syntax is <code>-req_perm_type &lt;req_perm_type&gt;</code></p>
                                                <p class="Option_Def">Filter by <b>required</b> or <b>permitted</b>. This filter is only applicable when the <code>-rel2role</code> fixed value is set to <b>SELF_AND_SPECIFIC_RELATED</b> or <b>SPECIFIC_RELATED_ONLY</b></p>
                                                <p class="Option_Def">The options for <code>-req_perm_type</code> are:
        <ul><li><p class="Option_Def"><b>ANY</b> - required or permitted role</p></li><li><p class="Option_Def"><b>REQUIRED_ONLY</b> - required only</p></li><li><p class="Option_Def"><b>PERMITTED_ONLY</b> - permitted only</p></li><li><p class="Option_Def"><b>NEITHER</b> - neither required nor permitted</p></li></ul></p>
                                                <p style="font-weight: bold;">Fixed Values for the Search Subcommand</p>
                                                <p>Fixed value options in the Search subcommand let you search for roles using specific values. Fixed values can be combined with filters to refine your searches.</p>
                                                <p class="Option">&lt;rel2role&gt; (relationship to role)
        <ul style="font-weight: normal;font-style: normal;"><li><p class="Option_Def"><b>ANY</b></p></li><li><p class="Option_Def"><b>DIRECT_ONLY</b> - Only show where privilege is derived directly from the role</p></li><li><p class="Option_Def"><b>DIRECT_SELECTED_INDIRECT</b> Show direct relationships, and any specified indirect relationships </p></li><li><p class="Option_Def"><b>ALL_INDIRECT</b> - Only show where privilege is derived indirectly from other roles</p></li><li><p class="Option_Def"><b>SELECTED_INDIRECT</b> - Only show where privilege is derived indirectly from selected other roles, using entitlement/permission filters</p></li></ul></p>
                                                <p class="Option">&lt;relation_type&gt;	
        <ul style="font-weight: normal;font-style: normal;"><li><p class="Option_Def"><b>ANY</b></p></li><li><p class="Option_Def"><b>ENTITLEMENT</b> - Entitlements only</p></li><li><p class="Option_Def"><b>PERMISSION</b> - Permissions only</p></li></ul></p>
                                                <p class="Option">&lt;inheritance&gt;	
        <ul style="font-weight: normal;font-style: normal;"><li><p class="Option_Def"><b>ANY</b></p></li><li><p class="Option_Def"><b>SELF_ONLY</b> - Privileges derived from the role only</p></li><li><p class="Option_Def"><b>INHERITED_ONLY</b> - Privilege derived from inheritance only</p></li></ul></p>
                                                <p class="Option" style="font-weight: bold;">&lt;app_status&gt;	
        <ul style="font-weight: normal;font-style: normal;"><li><p class="Option_Def"><b>APP_NOTFOUND</b> - Application is not found, role is orphaned</p></li><li><p class="Option_Def"><b>ENT_NOTFOUND</b> - Entitlement not found</p></li><li><p class="Option_Def"><b>OK</b> - Application exists</p></li></ul></p>
                                                <p class="Option">&lt;req_perm_type&gt;	
        <ul style="font-weight: normal;font-style: normal;"><li><p class="Option_Def"><b>ANY</b></p></li><li><p class="Option_Def"><b>REQUIRED_ONLY</b> – Only Required is set to true</p></li><li><p class="Option_Def"><b>PERMITTED_ONLY</b> – Only Permitted is set to true</p></li><li><p class="Option_Def"><b>NEITHER</b> - Neither Required nor Permitted are set to true</p></li><li><p class="Option_Def"><b>BOTH</b> - Both Required and Permitted are set to true</p></li></ul></p>
                                                <p style="font-weight: bold;">Notes on the Search Subcommand</p>
                                                <ul>
                                                    <li>
                                                        <p>The  <code>&lt;rel2role&gt;</code> (relationship_to_role) options [ <b>ANY</b> | <b>DIRECT_ONLY</b> | <b>ALL_INDIRECT</b> ] are incompatible with specified [ <code>inheritance </code>| <code>req_perm_type</code> ] filters other than <b>ANY</b></p>
                                                    </li>
                                                    <li>
                                                        <p><code>ent_perm_type</code> value of permission is incompatible with <code>ent_attr</code> and <code>ent_value</code> criteria</p>
                                                    </li>
                                                    <li>
                                                        <p><code>ent_perm_type</code> value of entitlement is incompatible with <code>perm_right</code> and <code>perm_target</code> criteria</p>
                                                    </li>
                                                    <li>
                                                        <p><code>role_name, ent_attr, ent_value, perm_right</code>,and <code>perm_target</code> support wildcard search with %</p>
                                                    </li>
                                                </ul>
                                                <p><b>Examples</b>
                                                </p>
                                                <p><code>rolerelationship search</code>
                                                </p>
                                                <p style="text-indent: 0.5in;">Returns usage/help information for the Search subcommand</p>
                                                <p><code>rolerelationship search -app ExampleRoleApp</code>
                                                </p>
                                                <p>Returns all roles that have entitlements from the ExampleRoleApp application, indirectly or directly</p>
                                                <p><code>rolerelationship search -app ExampleRoleApp -role_name 'MyCompany IT Role'</code>
                                                </p>
                                                <p>Returns all direct entitlements in the ExampleRoleApp for the MyCompany IT Role</p>
                                                <p><code>rolerelationship search -app ExampleRoleApp -role_type business</code>
                                                </p>
                                                <p>Returns all roles of type business that have entitlements in the ExampleRoleApp application, indirectly or directly</p>
                                                <p><code>rolerelationship search -app Oracle_DB_oasis -ent_perm_type permission -perm_target AP_Logins -perm_right create</code>
                                                </p>
                                                <p>Returns roles in the Oracle_DB_oasis app that have create permissions on the AP_Logins target</p>
                                                <p>&#160;</p>
                                                <h4><b>Show</b>
                                                </h4>
                                                <p>This subcommand returns details about entitlements and status for the requested role. A role name or ID must be provided as an argument. If there are any spaces in the role name, the role name must be enclosed in single quotes (for example, 'Payroll Approver'). Wildcards are not supported for the show subcommand.</p>
                                                <p><b>Syntax</b>: <code>rolerelationship show <i>[Role Name or ID] [-l]</i></code></p>
                                                <p>The <code>-l</code> option returns results in a list view, suppressing entitlement and status information in the results, so that relationship data is not displayed.</p>
                                                <p><b>Examples</b>
                                                </p>
                                                <p><code>rolerelationship show -role_name 'Payroll Approver'</code>
                                                </p>
                                                <p><code>rolerelationship show -role_name TaxManager -l</code>
                                                </p>
                                                <p><code>rolerelationship show -role_name 7f0000017e731ebe817e73cf168a0398</code>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>