<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_SP__Side_Nav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="Online">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Approval Steps</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../zresources/tablestyles/breadcrumb_table.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-left.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-right.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/icon-print-gray.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../zresources/tablestyles/standardtable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../zresources/stylesheets/iiq_stylesheet.css" rel="stylesheet" type="text/css" />
        <script src="../resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../iiqlandingpage.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../zresources/tablestyles/breadcrumb_table.css');" class="TableStyle-Breadcrumb_Table" cellspacing="0">
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-Breadcrumb_Table-Body-Body1">
                                                <td class="TableStyle-Breadcrumb_Table-BodyB-Column1-Body1">
                                                    <div class="nocontent">
                                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="{title} topic link" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="TableStyle-Breadcrumb_Table-BodyA-Column1-Body1">
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: ;text-align: right;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img alt="Navigate previous" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img alt="Navigate next" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img alt="Print" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img alt="Expand all" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="wf_editing_xml_3159126297_1631376"></a><a name="wf_editing_xml_3159126297_49575"></a>Approval Steps</h1>
                                        <p>Approval is one of the most common actions that a workflow process performs. The IdentityIQ Approval model is constructed to simplify the process of defining an approval structure. Approvals are a special type of step that contain an &lt;Approval&gt; element, specifying how the approval work item is presented for approval. </p>
                                        <p>Some approval steps are designed to get a user's approval on a requested change, as the name implies. However, the approval element can be used any time data needs to be gathered from a user.</p>
                                        <p>Typically, when you use approval steps to gather non-approval data, you use a custom form to: </p>
                                        <ul>
                                            <li>
                                                <p>Present the work item to the user <br />and</p>
                                            </li>
                                            <li>
                                                <p>Request the needed information from the user.</p>
                                            </li>
                                        </ul>
                                        <p>For information on creating approval steps, see the section above. Through the XML, the custom form is manually defined within an approval step. You can also specify custom forms for traditional approvals when you need to present the information differently than the standard approval forms layout. See<a href="standardforms.htm" class="MCXref xref">Workflow Forms</a> for more details on usage of custom forms.</p>
                                        <p>Similar to other Workflow elements, you specify some modifiers as attributes on the approval element and specify other modifiers through nested elements within the approval.</p>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Approval Attributes</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Approval <br />Attribute</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Purpose</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>mode</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Specifies how an approval is processed. Mode can be determined from string, script, rule, call, or reference String is the default. The user interface only supports the selection of a string of one of the values listed below.The XML also enables reference to a process variable containing one of those values or the specification of a script, rule, or method call that can determine one of those values programmatically.</p>
                                                                <p>Valid values are:</p>
                                                                <ul>
                                                                    <li>
                                                                        <p><b>serial</b> - approvers are specified in order and the item is passed to each approver in that order. If any approver in the chain rejects, the item is rejected.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p><b>serialPoll</b> - approvers are specified in order and item is passed to each approver in that order. Data is collected on approvals and rejections. However, if one approver rejects, does not necessarily result in the item being rejected. The action decision is expected to be specified in AfterScript logic.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p><b>parallel</b> - item is sent to all named approvers at one time. The item is rejected if any approver rejects it.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p><b>parallelPoll</b> - item is sent to all named approvers at one time. Data is collected on approvals and rejections but rejection by one does not mean rejection of item. The action decision is expected to be specified in AfterScript logic.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p><b>any</b> - item is sent to all named approvers at one time. The first approver to respond makes the decision for the group.</p>
                                                                    </li>
                                                                </ul>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>owner</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>One or more approvers can be specified by string, script, rule, call, or reference. String is the default.</p>
                                                                <p>The mode determines how and when the item is submitted to each listed owner when more than one is specified.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>renderer</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>JSF include to render the work item details.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>return</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Comma-separated values (CSV) list of variable names to copy from completed work items back into workflow.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>send</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>CSV list of variable names to include in the work items.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>description</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Defines work item description. For nested approvals, child approvals use the work item defined by the parent approval unless the child approval defines its own work item. You can set the description by string, script, rule, call, or reference String is the default.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>validation</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Used to validate any information the user entered during the approval. This attribute can be specified as string, script, rule, call, or reference. Script is the default. You generally use a nested validationScript element instead of a validation argument. </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td colspan="2" class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p><b>Nested Tag within Approval Element</b>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>AfterScript</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Provides instructions for additional processing to be done on the item after the approval is complete, and only if approved. Often uses methods in the Approval Rule Library and LCM Workflow Rule Library. If those methods are to be used, the rule libraries must be explicitly included in the workflow using the &lt;RuleLibraries&gt; element.</p>
                                                                <p class="CellNote">ParallelPoll and serialPoll items always execute this script after all responses are collected. With either of these modes, the logic in this script should aggregate the results and determine if the item should be approved or rejected. The business determines the criteria for approval or rejection, for example majority rule, any approval=approval, etc.</p>
                                                                <p>In either poll mode, the AfterScript is inherited by child approvals if one is not specified.In other modes, child approvals do not inherit the after script.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>InterceptorScript</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>This script is more complex than the AfterScript and is used less often. The script is called in several places in the approval processing: at the approval start, pre-Assimilation, post-Assimilation, when the work item is archived, and at the end of the approval. The stage of the processing is passed to the script as an argument called method that can be used to determine what the script should do at that time. The workflow context's args are also passed to the script.</p>
                                                                <p>Method values for conditional analysis within InterceptorScript logic:</p>
                                                                <ul>
                                                                    <li>
                                                                        <p>	startApproval</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	preAssimilation</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	postAssimilation</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	archive</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	endApproval</p>
                                                                    </li>
                                                                </ul>
                                                                <p>If an InterceptorScript and AfterScript exist, the InterceptorScript postAssimilation logic launches before the AfterScript.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>validationScript</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Script to perform validation on the work item. For example, you can use this script to validate any data the user enters on the approval before the data is assimilated. This script is inherited by any child approvals.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Source</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Nested within the AfterScript, InterceptorScript, and validationScript tags and contains the java BeanShell source for the script.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Arg</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Arguments available to the approval action. Specified by string, script, rule, call, or reference. Most variables are passed to approval through send list. However, args that require any transformation must be sent through an Arg element.</p>
                                                                <p>Additionally, the following args defined with reserved system names are passed through the Arg element with that name specified:</p>
                                                                <ul>
                                                                    <li>
                                                                        <p>	workItemRequester</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemDescription</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemType</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemTargetId</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemTargetName</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemTargetClass</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemDisableNotification</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemNotificationTemplate</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemEscalationTemplate</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemReminderTemplate</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemEscalationRule</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemEscalationStyle</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemHoursTillEscalation</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemHoursBetweenReminder</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemMaxReminders</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemPriority</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemIdentityRequestId</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>	workItemArchive</p>
                                                                    </li>
                                                                </ul>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body2">
                                                                <p>Return</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body2">
                                                                <p>Return value defines how things should be assimilated from a work item back into the workflow case. This attribute is an alternative to the return attribute CSV of variables. It is more complex and also more powerful.</p>
                                                                <p>This attribute is rarely used in approvals. It is most often used when returning an approval work item variable to a workflow variable of a different name or when you need to transform the variable contents of a work item with a script. The use of these types of return elements follows the same rules as step returns from steps that subprocesses, with addition of local attribute options. See <a href="wf_step_elements.htm" class="MCXref xref">Step Elements</a>.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>The following basic approval step example presents an account change to the identity's manager for approval. The AfterScript records the approval decision and creates an audit record.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;RuleLibraries&gt;<br />&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Rule"&#160;&#160;name="Approval Library"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Rule"&#160;&#160;name="LCM Workflow Library"/&gt;<br />&lt;/RuleLibraries&gt;<br /><br />&lt;Step icon="Approval" name="Manager Approval"&gt;<br />&lt;Approval mode="serial" owner="script:getManagerName(identityName, launcher, fallbackApprover);" renderer="lcmWorkItemRenderer.xhtml" send="approvalSet,identityDisplayName,identityName,policyViolations"&gt;<br /><br />&lt;Arg name="workItemDescription" value="Manager Approval - Account Changes for User: $(identityDisplayName)"/&gt;<br />&lt;Arg name="workItemNotificationTemplate" value="ref:managerEmailTemplate"/&gt;<br />&lt;Arg name="workItemRequester" value="$(launcher)"/&gt;<br /><br />&lt;AfterScript&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Source&gt;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;import sailpoint.workflow.IdentityRequestLibrary;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assimilateWorkItemApprovalSet(wfcontext, item, approvalSet);<br />IdentityRequestLibrary.assimilateWorkItemApprovalSetToIdentityRequest(wfcontext, approvalSet);<br />auditDecisions(item);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&lt;/Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;/AfterScript&gt;<br />&#160;&#160;&#160;&#160;<br />&lt;/Approval&gt;<br /><br />&#160;&#160;&#160;&#160;&lt;Description&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;If approvalScheme contains manager, send an approval for all&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;requested items in the request. This approval will get the entire&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;approvalSet as part of the workitem.<br />&#160;&#160;&#160;&#160;&lt;/Description&gt;<br /><br />&lt;Transition to="Build Owner ApprovalSet"&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;when="script:isApprovalEnabled(approvalScheme, &amp;quot;owner&amp;quot;)"/&gt;<br />&lt;Transition to="Build Security Officer ApprovalSet"&#160;<br />&#160;&#160;&#160;&#160;when="script:isApprovalEnabled(approvalScheme, &amp;quot;securityOfficer&amp;quot;)"/&gt;<br />&lt;Transition to="end"/&gt;<br /><br />&#160;&#160;&lt;/Step&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p class="note">In the AfterScript in this example, the methods not qualified by the library name are in the LCM Workflow Rule Library that is available to the workflow through the &lt;RuleLibraries&gt; declaration. <br /><br />The assimilateWorkItemApprovalSetToIdentityRequest method is part of the IdentityRequestLibrary, this is available to the script through the import of that library in the script. <br /><br />Library methods called through step action attributes are available through the workflow libraries attribute list,. However, when the library methods are executed from within scripts, the library must be specifically imported for the script.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Nested Approvals</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>Child approvals created through the user interface are expressed as nested approval elements in the XML.When nested approvals exist, the parent ceases to be an approval of its own.In those case, the sole purpose of the parent approval is to organize and contain the child approvals. The mode on the parent determines how to process the set of peer child approvals. </p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&#160;&#160;&#160;&lt;Approval mode="string:parallel" name="Approve Region" owner="ref:regionApprover"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Arg name="workItemDescription" value="string:Approve Region for $(identityName)"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="childApproval1" owner="string:Walter.Henderson"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="childApproval2" owner="string:Alan.Bradley"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"/&gt;<br />&#160;&#160;&#160;&lt;/Approval&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>In the example above, childApproval1 and childApproval2 are processed in parallel. Because both of these child approvals are identical (no custom work item config and no children of their own), the same objective can be accomplished with a single approval with multiple owners:</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&#160;&#160;&#160;&lt;Approval mode="string:parallel" name="Approve Region" owner="ref:regionApprover"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Arg name="workItemDescription" value="string:Approve Region for $(identityName)"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="childApproval1" owner="string:Walter.Henderson"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="childApproval2" owner="string:Alan.Bradley"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"/&gt;<br />&#160;&#160;&#160;&lt;/Approval&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>Nested approvals can be used effectively when different approval levels are implemented with custom configurations and specifications. For example, the workItemConfig for each of the child approvals can be different, which can result in a notification scheme, escalation policy, etc. for the different approvers.</p>
                                                <p>Nested approvals can be governed by a different approval mode from the one used on the master set and/or can contain their own child approval levels. One child approval can be done as an any approval, one that accepts the ruling of the first responder of several listed approvers, while the highest approval level is managed serially. Another child approval can implement custom workItemConfigs for its own child approvals. The example below illustrates all of these concepts.</p>
                                                <p>Nested approvals can be used effectively when different approval levels are implemented with custom configurations and specifications. For example, the workItemConfig for each of the child approvals can be. The following example that illustrates all of these concepts.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&#160;&#160;&#160;&lt;!-- Approval submitted to HR and to supervisor and manager in serial manner --&gt;<br />&#160;&#160;&#160;&lt;Approval mode="string:serial" name="Approve Region" owner="spadmin"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;send="identityName,region"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Arg name="workItemDescription" value="string:Approve Region for $(identityName)"/&gt;<br />&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- HR Personnel approve region (whoever responds first makes decision) --&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="HRApproval" mode="string:any"&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;owner="ref:HRApprovers" send="identityName,region"/&gt;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- Supervisor and Manager approve region serially after HR approves --&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- Each has a different email template (work item config) for notification --&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval mode="string:serial" name="SupMgrApproval" send="identityName,region"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="Supervisor" send="identityName,region" owner="Tom.Jones"&gt;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;WorkItemConfig escalationStyle="none"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;NotificationEmailTemplateRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.EmailTemplate"&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name="SupervisorApprovalEmail"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/NotificationEmailTemplateRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/WorkItemConfig&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Approval&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Approval name="Manager" send="identityName,region" owner="Mary.Peterson"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;WorkItemConfig escalationStyle="none"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;NotificationEmailTemplateRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.EmailTemplate"&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />name="ManagerApprovalEmail"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/NotificationEmailTemplateRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/WorkItemConfig&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Approval&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Approval&gt;<br />&#160;&#160;&#160;&lt;/Approval&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>This ability to nest approvals, with options to assign different approval modes and work item configurations to each, enables implementers to create highly customized approval structures to meet the needs of the installation.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>