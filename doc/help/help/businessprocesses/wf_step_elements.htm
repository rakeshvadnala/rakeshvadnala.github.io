<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_SP__Side_Nav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="Online">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Step Elements</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../zresources/tablestyles/breadcrumb_table.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-left.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-right.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/icon-print-gray.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../zresources/tablestyles/standardtable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../zresources/stylesheets/iiq_stylesheet.css" rel="stylesheet" type="text/css" />
        <script src="../resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../iiqlandingpage.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../zresources/tablestyles/breadcrumb_table.css');" class="TableStyle-Breadcrumb_Table" cellspacing="0">
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-Breadcrumb_Table-Body-Body1">
                                                <td class="TableStyle-Breadcrumb_Table-BodyB-Column1-Body1">
                                                    <div class="nocontent">
                                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="{title} topic link" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="TableStyle-Breadcrumb_Table-BodyA-Column1-Body1">
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: ;text-align: right;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img alt="Navigate previous" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img alt="Navigate next" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img alt="Print" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img alt="Expand all" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="wf_editing_xml_3159126297_1618598"></a>Step Elements</h1>
                                        <p class="note">Similar to variables, some parts of a step definition are included as attributes of the step and others are expressed as nested elements within the step.</p>
                                        <p>The core of the workflow is contained within the step elements. At a minimum, a step should contain:. The action attribute determines what processing the step performs. Steps usually contain one or more nested <code>&lt;Transition&gt; </code>elements and ideally also contain a nested <code>&lt;Description&gt;</code> element that tells the reader what the step is intended to do.</p>
                                        <ul>
                                            <li>
                                                <p>an icon</p>
                                            </li>
                                            <li>
                                                <p>name</p>
                                            </li>
                                            <li>
                                                <p>posX attribute</p>
                                            </li>
                                            <li>
                                                <p>posY attribute</p>
                                            </li>
                                        </ul>
                                        <p>The action attribute determines what processing the step performs. Steps usually contain one or more nested &lt;Transition&gt; elements and ideally also contain a nested &lt;Description&gt; element that tells the reader what the step is intended to do.</p>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Step icon="Start" name="Start" posX="250" posY="126"&gt;<br />&#160;&#160;&#160;&#160;&lt;Description&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The workflow's processing starts with this step.<br />&#160;&#160;&#160;&#160;&lt;/Description&gt;<br />&#160;&#160;&#160;&#160;&lt;Transition to="Initialize"/&gt;<br />&#160;&#160;&lt;/Step&gt;</code></pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Step Attributes</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Step Attribute</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Purpose</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>configForm</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>A soft reference to the form that is presented to the Basic View of the Arguments tab on the Step Editor panel.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>name</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Short but descriptive name for step displayed in user interface graphical display below the step icon.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>icon</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Icon to display for the step in the user interface graphical Process Designer. </p>
                                                                <p>Valid icon values include: <br /><br />Start, Stop, Default (Generic Step), Analysis (Launch Impact Analysis), Approval, Audit, Catches, Email, Message (Add Message), Provision, Task (Launch Task), and Und</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>posX, posY</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>X and Y indicate positions where the step icon should be displayed on the user interface graphical Process Designer grid. </p>
                                                                <p class="CellNote">If you omit the posX and posY values, the icon is displayed at the top right of the grid. You can drag the icon around to create the desired layout at a later time.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>action</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>The processing action to take for the step, such as a script, rule, subprocess, or call. See <a href="#wf_editing_xml_3159126297_1611703" class="MCXref xref">Step Actions</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>wait</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Pauses the action for a specified duration, see <a href="#wf_editing_xml_3159126297_1611967" class="MCXref xref">Wait Attribute</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>catches</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Causes the step to be launch when <b>Complete</b> status is caught, rather than through a transition from another step. See <a href="#wf_editing_xml_3159126297_1607810" class="MCXref xref">Catches Attribute</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>resultVariable</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Variable name that contains the return value from the step.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td colspan="2" class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p><b>Nested Tag within Step Element</b>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Description</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Provide a description of the step purpose.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Transition</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Identifies the next step the process moves to when the current step is complete. See <a href="#wf_editing_xml_3159126297_1611538" class="MCXref xref">Transition Element</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Arg</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Passes variables to the step. Used for steps that require data to be passed in to them.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Return</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Receives return values from subprocess steps. See <a href="#wf_editing_xml_3159126297_1611862" class="MCXref xref">Return Elements</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Script</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Alternative to script in the Action attribute for the step. Use these step attributes for action scripts of any length or complexity.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>Source</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Nested within the Script tag and contains the Java BeanShell source for the action to execute.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /></a><a name="wf_editing_xml_3159126297_1611538"></a><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Transition Element</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The transition element indicates the name of the next step the process executes following completion of the current step and is always nested within a step in the model. Transitions can contain conditions based on a string, script, rule, call method, or reference (similar to a variable initialization). The return value for conditions must be a Boolean (True/False). When multiple transitions are stipulated, they are evaluated in the order they are listed, and the transition for the first condition met is followed. The last transition in the list should, as a best practice, not contain any conditions so it can be used as the default action. </p>
                                                <p>Transitions contain two attributes: </p>
                                                <ul>
                                                    <li>
                                                        <p>to — next step</p>
                                                    </li>
                                                    <li>
                                                        <p>when — condition for progressing to the next step</p>
                                                    </li>
                                                </ul>
                                                <p>When a script is evaluated as the condition for a transition, it is often specified through these nested elements instead of as a <b>when </b>attribute on the transition element, especially if you use a long script.</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Nested Tag <br />Within Transition Element</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Purpose</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Script</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Alternative to script in the transition <b>when </b>attribute. The script should be used for scripts of any length or complexity.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body2">
                                                                <p>Source</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body2">
                                                                <p>Nested within the Script tag. This tag contains the BeanShell source for the condition evaluation.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>Example:</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Transition to=”end”&gt;<br />&#160;&#160;&#160;&#160;&lt;Script&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(“cancel”.equals(violationReviewDecision) || ((size(policyViolations)&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&gt; 0 ) &amp;amp;&amp;amp; (policyScheme.equals(“fail”))))<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&#160;&#160;&#160;&#160;&lt;/Script&gt;<br />&lt;/Transition&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>Conditions in the <b>when</b> attribute can be specified using the following types of conditions:</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Condition Type</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Description and Examples</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>string</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Not used. This condition type is an artifact of the common structure used for variable setting and does not apply to conditions. A literal value of <b>True</b> or <b>False</b> can be specified. However, using one of those literal values does not enable any evaluation in the transition. <b>True</b> always executes the associated step and <b>False</b> always bypasses the step.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>script</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Evaluates script result value to determine step transition. Very short scripts are specified inline on the transition element, within the <b>when</b> attribute. Longer scripts are expressed within nested &lt;script&gt; and &lt;source&gt; elements.</p>
                                                                <p class="CellNote">Because script is the default transition when option, the “script:" prefix can be included or omitted.</p>
                                                                <p>Examples:</p>
                                                                <p>(1) 	In-line Script. Use only for very short, simple scripts.</p>
                                                                <p class="example">&lt;Transition to="Exit On Policy Violation"      </p>
                                                                <p class="example">       when="script:((size(policyViolations)&gt; 0)</p>
                                                                <p class="example">       &amp;amp;&amp;amp; (policyScheme.equals(&amp;quot;fail&amp;quot;)))"/&gt;</p>
                                                                <p>(2) 	Longer script within nested &lt;script&gt; tag should be use for transition scripts of any complexity or length.</p>
                                                                <p class="example">&lt;Transition to="end"&gt;</p>
                                                                <p class="example">    &lt;Script&gt;</p>
                                                                <p class="example">       &lt;Source&gt;</p>
                                                                <p class="example">           ("cancel".equals(violationReviewDecision) || ((size(policyViolations) </p>
                                                                <p class="example">            &gt; 0 ) &amp;amp;&amp;amp; (policyScheme.equals("fail"))))</p>
                                                                <p class="example">       &lt;/Source&gt;</p>
                                                                <p class="example">    &lt;/Script&gt;</p>
                                                                <p class="example">&lt;/Transition&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>rule</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Evaluates the return value of a workflow rule to determine step transition.</p>
                                                                <p>Examples:</p>
                                                                <p class="example">&lt;Transition to="Process Approval" when="rule:RequireApprovalRule"&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>call</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Evaluates return value of a call to a workflow library method to determine step transition.</p>
                                                                <p>Example:</p>
                                                                <p class="example">&lt;Transition to:"Check Status" when="call:requiresStatusCheck" /&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>ref</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Evaluates a defined, Boolean, workflow variable to determine step transition.</p>
                                                                <p>Example:</p>
                                                                <p class="example">&lt;Transition to="Refresh Identity" when="ref:doRefresh"/&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body2">
                                                                <p>Unconditional</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body2">
                                                                <p>Specified as last transition option to give a default path for the transition.</p>
                                                                <p>Example:</p>
                                                                <p class="example">&lt;Transition to="Approve"/&gt;</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /></a><a name="wf_editing_xml_3159126297_1611703"></a><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Step Actions</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>Most steps involve much more than a name and a transition. Steps also include an action attribute that executes the workflow processing. The action of a step can be a script or can a rule, subprocess, or a call to a workflow library method.</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Action Type</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Description</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Script</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Similar to scripts in other parts of the workflow XML, the script can be contained within the action attribute or can be nested within the Step in a &lt;Script&gt; block.</p>
                                                                <p>Examples:</p>
                                                                <p>(1) 	In-line Script, used only for very short, simple scripts.</p>
                                                                <p class="example">
                                                                    <br />&lt;Step action="script:approvalSet.setAllProvisioned();" icon="Task" name="Post Provision"&gt;</p>
                                                                <p class="example">   &lt;Transition to="Stop"/&gt;</p>
                                                                <p class="example">&lt;/Step&gt;</p>
                                                                <p>(2) 	Longer script within nested &lt;script&gt; tag. Used for action scripts of any complexity or length.</p>
                                                                <p class="example"><span class="code">&lt;Step name="Start" icon="Start" posX="20" posY="20"&gt;</span>
                                                                </p>
                                                                <p class="example">   &lt;Script&gt;</p>
                                                                <p class="example">      &lt;Source&gt;</p>
                                                                <p class="example">         String wfName = wfcontext.getWorkflow().getName();</p>
                                                                <p class="example">         System.out.println("Starting workflow: [" + wfName + "]");</p>
                                                                <p class="example">      &lt;/Source&gt;</p>
                                                                <p class="example">   &lt;/Script&gt;</p>
                                                                <p class="example">   &lt;Transition to="Compile Provisioning Project"/&gt;</p>
                                                                <p class="example">&lt;/Step&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>Rule</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>A step can execute a block of Java BeanShell code encapsulated in a reusable workflow Rule.</p>
                                                                <p>Example:</p>
                                                                <p class="example">&lt;Step action="rule:WFRule_verifyIdentity" icon="Task" name="Verify Identity" posX="600" posY="202"&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>Subprocess</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>When you include a &lt;WorkflowRef&gt; element within the step and reference the <b>SailPoint</b><b>.object.Workflow</b> class and the specific workflow by name, a subprocess is defined.</p>
                                                                <p>Example:</p>
                                                                <p class="example">&lt;Step icon="Task" name="Initialize" posX="320" posY="126"&gt;</p>
                                                                <p class="example">     …</p>
                                                                <p class="example">    &lt;WorkflowRef&gt;</p>
                                                                <p class="example">        &lt;Reference class="sailpoint.object.Workflow" name="Identity </p>
                                                                <p class="example">         Request Initialize"/&gt;</p>
                                                                <p class="example">    &lt;/WorkflowRef&gt;</p>
                                                                <p class="example">    &lt;Transition to="end"&gt;</p>
                                                                <p class="example">&lt;/Step&gt;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body2">
                                                                <p>Call</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body2">
                                                                <p>Calls to workflow library methods can be used to do step processing.</p>
                                                                <p class="CellNote">Call is the default action option. Therefore the "call:" prefix can be included or omitted.</p>
                                                                <p>Example:</p>
                                                                <p class="example">&lt;Step action="call:refreshIdentity" icon="Task" name="Refresh Identity" posX="618" posY="242"&gt;</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Arguments</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>Any variables to be passed to a script, rule, subprocess, or library method must be declared as step arguments through &lt;Arg&gt; elements. Similar to other variables, the values for arguments can be specified by string, script, rule, call, or reference. The default specification type is string. Therefore, the “string:” qualifier can be omitted. However, arguments are also commonly passed by referencing workflow variables. </p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>Step icon="Task" name="Initialize" posX="320" posY="126"&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="w" vaflolue="ref:flow"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="formTemplate" value="string:Identity Update"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="identityName" value="ref:identityName"/&gt;<br />&#160;&#160;&#160;&#160;&#160;…<br />&#160;&#160;&#160;&#160;&lt;Description&gt;Call the standard subprocess to initialize the request,&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;this includes auditing, building the approvalset, compiling the plan into&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;project and checking policy violations.&lt;/Description&gt;<br />&#160;&#160;&#160;&#160;…&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&lt;WorkflowRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Workflow" name="Identity Request&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Initialize"/&gt;<br />&#160;&#160;&#160;&#160;&lt;/WorkflowRef&gt;<br />&#160;&#160;&#160;&#160;&lt;Transition to="end"&gt;<br />&lt;/Step&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>When an argument is specified as a script, rule, or call, for example, &lt;Arg name="myVar" value="rule:myWFRule"/&gt;, any needed arguments to the script, rule, or library method cannot be explicitly specified. </p>
                                                <p>Because these scripts, rules, and library methods automatically have access to the workflow context object, the scripts can access workflow variables directly through the workflow context get methods. These scripts/rules/methods can also access any step arguments that were defined before them in the step declaration. For example, the method that identifies the value for the Manager argument can use the value in the identityName argument in its processing, if needed. See the following example.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Step icon="Task" name="Processing Step" posX="320" posY="126"&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="identityName" value="ref:identityName"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="Manager" value="call:getManager"/&gt;<br />&#160;&#160;&#160;&#160;…<br />&lt;/Step&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>The following table lists the available Arg attributes</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Arg Attribute</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Purpose</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>name</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Variable name in process to which the data is being passed.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body2">
                                                                <p>value</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body2">
                                                                <p>Value to pass into the variable, such as string, script, rule, call, reference.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /></a><a name="wf_editing_xml_3159126297_1611862"></a><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Return Elements</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>To return more than one value from a subprocess, you can declare &lt;Return&gt; elements for the step. At a minimum, a return element contains: a <b>name </b>attribute and a <b>to</b> attribute. The name attribute is the name of the variable in the subprocess workflow and the <b>to</b> attribute is the variable name in the calling (current) workflow. If these names are the same in both workflows, a <b>to</b> attribute is not required. However, specifying a to attribute is a best practice for clarity. </p>
                                                <p>Use the merge attribute when the variable is a List and the returned values should be appended to the current workflow's list instead of replacing it. Similar to Args, value attribute for return elements can be specified as a string, script, rule, call, or reference. String is the default. If the value argument is omitted, the value of the name variable is copied as-is into the to variable, However, a script/rule/method can be used to transform or modify the value as it is passed. </p>
                                                <ul>
                                                    <li>
                                                        <p><b>name </b>attribute — name of the variable in the subprocess workflow </p>
                                                    </li>
                                                    <li>
                                                        <p><b>to</b> attribute — variable name in the calling (current) workflow</p>
                                                    </li>
                                                </ul>
                                                <p class="note">If these names are the same in both workflows, a <b>to </b>attribute is not required. However, specifying the to attribute is best practice. </p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Step icon="Task" name="Initialize" posX="320" posY="126"&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="flow" value="ref:flow"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="formTemplate" value="string:Identity Update"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="identityName" value="ref:identityName"/&gt;<br />&#160;&#160;&#160;&#160;&#160;…<br />&#160;&#160;&#160;&#160;&lt;Return name="project" to="project"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Return merge="true" name="workItemComments" to="workItemComments"/&gt;<br />&#160;&#160;&#160;&#160;&lt;WorkflowRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Workflow" name="Identity Request&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Initialize"/&gt;<br />&#160;&#160;&#160;&#160;&lt;/WorkflowRef&gt;<br />&#160;&#160;&#160;&#160;&lt;Transition to="end"&gt;<br />&lt;/Step&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>The following table lists the available Return attributes.</p>
                                                <p class="Anchor">&#160;</p>
                                                <table style="width: 576px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <col class="TableStyle-StandardTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-StandardTable-Head-Header1">
                                                            <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                                <p class="CellHeading">Return Attribute</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                                <p class="CellHeading">Purpose</p>
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>name</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Variable name in process from which the data is returned.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>to</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Variable name in the workflow step to which the data is passed.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                                <p>value</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                                <p>Value to pass into the variable, such as string, script, rule, call, reference.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body2">
                                                            <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                                <p>merge</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                                <p>Flag indicating that the value should be merged into the target variable instead of replacing the variable. This attribute is used for list variables.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-StandardTable-Body-Body1">
                                                            <td class="TableStyle-StandardTable-BodyB-Column1-Body1">
                                                                <p>local</p>
                                                            </td>
                                                            <td class="TableStyle-StandardTable-BodyA-Column1-Body1">
                                                                <p>Only applies to returns on Approvals. (See <a href="wf_approval_steps.htm" class="MCXref xref">Approval Steps</a>). A flag that indicate the value is passed to local storage within the parent approval and not passed to a workflow case variable. This attribute is used for complex approvals where a work item state is saved for later analysis in a script.</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Call</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p class="note">Installations can create custom libraries for commonly used and required business methods. However, custom library methods must be named with unique names that do not conflict with standard library method names. Conflicts resolve as a reference to the standard library method. It is possible to extend a standard library and overload its method names. Extending a standard library is not consider a best practice. Therefore, the best practice is to create new names for nonstandard methods. Creating new names makes it clear that the method is not a standard method.</p>
                                                <p>Use calls to workflow library methods to do step processing. Similar to subprocesses, they sometimes require arguments to be passed to them. You declare method arguments the same way as subprocesses. You use Library methods with a call action. See the following example.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Step action="call:refreshIdentity" icon="Task" name="Refresh Identity" posX="618" posY="242"&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="identityName" value="ref:identityName"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="correlateEntitlements" value="string:true"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Description&gt;Add arguments as necessary to enable refresh features. Typically you&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;only want this to correlate roles. Don't ask for provisioning since that<br />&#160;&#160;&#160;&#160;&#160;&#160;can result in provisioning policies that need to be presented and it's<br />&#160;&#160;&#160;&#160;&#160;&#160;too late for that. This is only to get role detection and exception<br />&#160;&#160;&#160;&#160;&#160;&#160;entitlements in the cube.&lt;/Description&gt;<br />&#160;&#160;&#160;&#160;&lt;Transition to="Notify"/&gt;<br />&#160;&#160;&lt;/Step&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>The methods available for the call action are those included in the libraries attribute for the workflow element, if specified. If no libraries attribute is specified, the workflow automatically has access to the methods in the Identity, Role, PolicyViolation, and Lifecycle Manager libraries. If other libraries, including custom libraries, are explicitly listed in the libraries attribute, any of the default libraries whose methods are needed by the workflow must also be explicitly included in the list to be available. See <a href="wf_library_methods.htm" class="MCXref xref">Workflow Library Methods</a> for details about the methods available in each library.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /></a><a name="wf_editing_xml_3159126297_1611967"></a><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Wait Attribute</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The step wait attribute causes the workflow to pause in its execution for the duration specified. The wait value can be specified as a string, script, rule, call, or reference. String is the default.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Step name="Wait for next check" wait="ref:provisioningCheckStatusInterval"&gt;<br />&#160;&#160;&#160;&#160;&lt;Description&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;Pause and wait for things to happen on the PE side.&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use the configurable interval to determine how long<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;we wait in between checks.<br />&#160;&#160;&#160;&#160;&lt;/Description&gt;<br />&#160;&#160;&#160;&#160;&lt;Transition to="CheckStatus"/&gt;<br />&#160;&#160;&lt;/Step&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>This attribute creates a special type of step with the sole purpose of creating a pause in the action. Wait steps are commonly used in re-try logic to enable behind-the-scenes processing to occur before the workflow attempts to repeat an action.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /></a><a name="wf_editing_xml_3159126297_1607810"></a><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Catches Attribute</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>These steps are not caused through a transition from a previous step. These steps are caused by a thrown message that the steps intercepts or catches. Currently, only a complete message is thrown and can be caught. This process occurs when one of the following items occurs: </p>
                                                <ul>
                                                    <li>
                                                        <p>All sequential steps in a workflow are executed to completion. <br />OR</p>
                                                    </li>
                                                    <li>
                                                        <p>Failure condition results in the termination of the workflow.</p>
                                                    </li>
                                                </ul>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Step catches="complete" icon="Task" name="Finalize"&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="project" value="ref:project"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="approvalSet" value="ref:approvalSet"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Arg name="trace" value="ref:trace"/&gt;<br />&#160;&#160;&#160;&#160;&lt;Description&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call the standard subprocess that can audit/finalize the request.<br />&#160;&#160;&#160;&#160;&lt;/Description&gt;<br />&#160;&#160;&#160;&#160;&lt;WorkflowRef&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Workflow" name="Identity Request Finalize"/&gt;<br />&#160;&#160;&#160;&#160;&lt;/WorkflowRef&gt;<br />&#160;&#160;&#160;&#160;&lt;Transition to="end"/&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>The primary purpose of these steps is to update the IdentityRequest object, which tracks and reports the status of a LifecycleManager request, making the history of LCM request processing available even after the TaskResult for the workflow was purged.   </p>
                                                <p>Each installation can drive custom logic based on catching this complete message.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>