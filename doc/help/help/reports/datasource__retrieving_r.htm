<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_SP__Side_Nav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="Online">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>DataSource: Retrieving Report Data</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../zresources/tablestyles/breadcrumb_table.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-left.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-right.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/icon-print-gray.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../zresources/tablestyles/standardtable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../zresources/stylesheets/iiq_stylesheet.css" rel="stylesheet" type="text/css" />
        <script src="../resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../iiqlandingpage.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../zresources/tablestyles/breadcrumb_table.css');" class="TableStyle-Breadcrumb_Table" cellspacing="0">
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-Breadcrumb_Table-Body-Body1">
                                                <td class="TableStyle-Breadcrumb_Table-BodyB-Column1-Body1">
                                                    <div class="nocontent">
                                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="{title} topic link" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="TableStyle-Breadcrumb_Table-BodyA-Column1-Body1">
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: ;text-align: right;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img alt="Navigate previous" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img alt="Navigate next" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img alt="Print" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img alt="Expand all" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="reports_developingcustomreports_3108331984_2851316"></a>DataSource: Retrieving Report Data</h1>
                                        <p>The data shown in the detail section of the report is retrieved through a query that is built based on a combination of the &lt;DataSource&gt; specification and the &lt;Columns&gt; element. In general, a query is specified in three parts: Select, From, and Where. The Select portion (the columns list) is specified through the &lt;Columns&gt; element in the report definition - specifically, the &lt;ReportColumnConfig&gt;s listed within &lt;Columns&gt; element. The From and Where clauses are specified through the &lt;DataSource&gt; element. </p>
                                        <p>There are three available datasource types: Filter, Java, and HQL. The simplest of these three is the Filter datasource, though various options available with this datasource type make it quite powerful and flexible. The other two are available for more complex report data retrieval needs, and Java is likely to be used as the datasource more often in HQL in those cases. Each of these three datasource types is discussed next.</p>
                                        <h2>Filter DataSource</h2>
                                        <p> A filter datasource executes a projection query to retrieve the data required by the ReportColumnConfigs specified for the report. It employs the SailPoint Filter object to specify the query. The object whose data is being queried is specified as the objectType for the DataSource, and the DataSource type is specified as “Filter”.</p><pre>&lt;DataSource objectType="<code>sailpoint</code>.object.Link" type="Filter"&gt;</pre>
                                        <p class="note">If the objectType is one of the top-level classes in the IdentityIQ object model (for example, the set of objects that can be exported from the iiq console or retrieved directly in from the debug pages), the fully-qualified class name is not required for this attribute. For example, Identity can be specified here as objectType=”Identity”. However, the fully-qualified name (for example, sailpoint.object.Identity) is always acceptable, even for the top-level classes, so when in doubt, specify the fully-qualified name. </p>
                                        <p>This is an example of a filter &lt;DataSource&gt; and its &lt;Columns&gt; specification:</p>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;LiveReport title="Uncorrelated Accounts Report"&gt;<br />&#160;&lt;DataSource objectType="sailpoint.object.Link" type="Filter"&gt;<br />&#160;&#160;&#160;&lt;QueryParameters&gt;<br />&lt;Parameter argument="correlatedApps" property="application.id"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Parameter defaultValue="false" property="identity.correlated" valueClass="Boolean"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Parameter defaultValue="false" property="application.authoritative" valueClass="Boolean"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Parameter defaultValue="false" property="application.logical" valueClass="Boolean"/&gt;<br />&#160;&#160;&#160;&lt;/QueryParameters&gt;<br />&#160;&lt;/DataSource&gt;<br />&#160;&lt;Columns&gt;<br />&lt;ReportColumnConfig field="username" header="rept_uncorrelated_ids_grid_username" property="nativeIdentity" sortable="true" /&gt;<br />&lt;ReportColumnConfig field="firstName" header="rept_uncorrelated_ids_grid_firstName" property="identity.firstname" sortable="true" /&gt;<br />&lt;ReportColumnConfig field="lastName" header="rept_uncorrelated_ids_grid_lastName" property="identity.lastname" sortable="true" /&gt;<br />&lt;ReportColumnConfig field="applicationName" header="rept_uncorrelated_ids_grid_appName" property="application.name" sortable="true" /&gt;<br />&#160;&lt;/Columns&gt;</code></pre>
                                            </div>
                                        </div>
                                        <p>The search criteria, making up the “where” clause for the search, are specified through one or more of several query-related elements: Query, QueryParameters, and QueryScript. Joins, sorts and groupBy columns can also be specified as needed for the query. </p>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />QueryParameters</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The &lt;QueryParameters&gt; element is used most often. QueryParameters is a map of argument values used to create the queryOptions object that controls the search. They can be specified based on report arguments, hard-coded values, or calculated values. QueryParameters contains a list of &lt;Parameter&gt; elements, each of which defines one of the criteria. These &lt;Parameter&gt;s are "anded" together to make the where clause. </p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;QueryParameters&gt;<br />&#160;&#160;&#160;&lt;Parameter argument="correlatedApps" property="application.id"/&gt;<br />&#160;&#160;&#160;&lt;Parameter defaultValue="false" property="identity.correlated" valueClass="Boolean"/&gt;<br />&#160;&#160;&#160;…<br />&lt;/QueryParameters&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>There are several different options for specifying parameters in a set of QueryParameters. These options are described below, illustrated with example Parameters. Most of these examples (except where noted) were taken from the Entitlement Owner Access Review Live Report which queries against the <b>sailpoint.object.CertificationItem</b> object, so all of these parameters relate to that object. </p>
                                                <ul>
                                                    <li><b>Referencing a report argument</b>: generally processed as “property = argument”; this parameter looks for certificationItems with a parent.certification.certificationGroups.id value in the report argument “certificationGroups”<br /><br /><code>&lt;Parameter argument="certificationGroups" property="parent.certification.certificationGroups.id"/&gt;</code></li>
                                                    <p class="note">When arguments are multi-valued, parameters based on them are automatically evaluated with “in” rather than “equals”.</p>
                                                    <li><b>Specifying a default value</b>: generally processed as “property = argument or defaultValue (if argument is null)”; this parameter looks for CertificationItems with a parent.certification.type equal to the report argument “type”; if none is provided, it defaults to the type “DataOwner”<br /><br /><code>&lt;Parameter argument="type" defaultValue="DataOwner" property="parent.certification.type" valueClass="sailpoint.object.Certification$Type"/&gt;</code></li>
                                                    <p class="note">This example also illustrates usage of the valueClass attribute; this attribute is not necessary for string or object comparisons but is for other types, such as enumerations (such as Type in this example), Booleans, Dates, Lists, etc.</p>
                                                    <li><b>Specifying a hard-coded value</b>: an attribute can also be hard coded to be evaluated against the defaultValue by not including an argument, as shown in this parameter from the Uncorrelated Accounts Report. This is processed as “property = defaultValue”, in this case cast as valueClass (not required for strings).<br /><br /><code>&lt;Parameter defaultValue=”false” property=”identity.correlated” valueClass=”boolean”/&gt;</code></li>
                                                    <li><b>Specifying different operations</b>: this example illustrates how to create evaluation conditions other than equals (or in) relationships; operation can be specified as GT, GE, LT, or LE (greater than, greater than or equal to, less than, less than or equal to)<br /><br /><code>&lt;Parameter argument="createStartDate" operation="GT" property="parent.certification.created"/&gt;</code></li>
                                                    <li><b>Using a ValueScript</b>: processed as "property = return value from ValueScript"; this parameter performs processing based on the argument to return a different value that should be used in the criterion; this example uses a ValueScript to get the application name that corresponds to the applicationID in the "application" report argument; in a ValueScript, the argument is accessed through the variable name "value".<br /><br /></li>
                                                </ul>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Parameter argument="applications" property="parent.application"&gt;<br />&#160;&#160;&#160;&lt;ValueScript&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;import sailpoint.object.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;import sailpoint.api.ObjectUtil;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (value != null){<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return ObjectUtil.convertIdsToNames(context, Application.class, value);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return null;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&#160;&#160;&#160;&lt;/ValueScript&gt;<br />&lt;/Parameter&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p class="note">Since object references are stored in the customized report instance XML (and passed to report input arguments) as ID values and many comparisons need to be done based on name, this convertIdsToNames() utility method is frequently used in ValueScripts in the standard reports.</p>
                                                <ul>
                                                    <li><b>Using a QueryScript</b>: used to specify any custom filter and add it into the queryOptions object that is used in the datasource filter; parameters using a QueryScript do not need to specify a property because the queryScript overrides any property on the parameter; the argument specified on the parameter can be accessed within the script through the “value” variable<br /><br />Group and populations are stored in groupDefinitions objects as a filter, so this example (from the Identity Forwarding Report) shows how a group or population selected as a report parameter is built into the datasource filter through a QueryScript.</li>
                                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                        <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Parameter argument="groupDefinitions"&gt;<br />&#160;&#160;&#160;&lt;QueryScript&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;import sailpoint.object.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;import sailpoint.reporting.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Filter f = ReportingLibrary.getGroupDefinitionFilter(context, value, false);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (f!=null) {<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queryOptions.addFilter(f);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return queryOptions;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&#160;&#160;&#160;&lt;/QueryScript&gt;<br />&lt;/Parameter&gt;</code></pre>
                                                        </div>
                                                    </div>
                                                    <li><b>ValueRule and QueryRule</b>: These two can be specified in place of ValueScript and QueryScript, respectively, to encapsulate the beanshell of a script into a reusable rule. (These two examples were not pulled from a standard report; they represent the appropriate syntax if the reports using the ValueScript and QueryScript specified above had encapsulated those scripts into rules.)<br /><br /></li>
                                                </ul>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;Parameter argument="applications" property="parent.application"&gt;<br />&#160;&#160;&#160;&lt;ValueRule&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Rule" id="4028460238ed9b8e0138ed9beff9090f" name="App Value Rule"/&gt;<br />&#160;&#160;&#160;&lt;/ValueRule&gt;<br />&lt;/Parameter&gt;<br /><br />&lt;Parameter argument="groupDefinitions"&gt;<br />&#160;&#160;&#160;&lt;QueryRule&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Reference class="sailpoint.object.Rule" id="4028460238ed9b8e0138ed9beff90900" name="Group Query Rule"/&gt;<br />&#160;&#160;&#160;&lt;/QueryRule&gt;<br />&lt;/Parameter&gt;</code></pre>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Query</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>Another way to specify the filter contents is though a &lt;Query&gt; element. The contents of Query element are specified as a filter string and can only specify hard-coded criteria with no variable substitution (i.e. report arguments cannot be specified within a Query element). Query allows the specification of “or” criteria, as shown in the example below:</p><pre>&lt;Query&gt;IdentityEntitlement.name=="assignedRoles" || IdentityEntitlement.name=="detectedRoles"&lt;/Query&gt;</pre>
                                                <p>Query and QueryParameters can be specified for the same DataSource. When both are specified, the Query filter and the Parameter filters are “anded” together to create the final where clause.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />QueryScript</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>QueryScript creates a filter string through a beanshell script. It is designed so it can append additional criteria, including those requiring variable substitution, onto a Query element's contents. The script has access to the string value of the Query element (in a string variable called “query”) and must explicitly append the additional criteria to it; otherwise, the original query string is overwritten with the QueryScript's return value. The QueryScript shown below actually comes from an HQL datasource report (the Account Group Membership Totals Report), but the QueryScript syntax is the same for all datasource types.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;QueryScript&gt;<br />&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;import java.util.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;List applications = args.get("application.id");<br />&#160;&#160;&#160;&#160;&#160;&#160;if (applications != null &amp;amp;&amp;amp; !applications.isEmpty()){<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;query = query + " and application.id in(:application_id) ";<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;return query;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&lt;/QueryScript&gt;</code></pre>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Join</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>When the search must access more than one object to process the filter criteria, a &lt;Join&gt; element is required to connect the objects properly. One or more Joins can be specified for a single datasource. </p>
                                                <p>For example, the Identity Roles Report displays the roles that each Identity is assigned. Most of the available filters for the report apply to the Identity object, but the role assignment is recorded on the IdentityEntitlement object, linked to the Identity object by the Identity ID.   The Join element specifies that connection. The property is the value on the primary object (the DataSource objectType) and the joinProperty specifies the connection attribute on the second object.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;DataSource objectType="Identity" type="Filter"&gt;<br />&#160;&#160;&#160;&lt;Join joinProperty="IdentityEntitlement.identity.id" property="id"/&gt;<br />&#160;&#160;&#160;&lt;Query&gt;IdentityEntitlement.name=="assignedRoles" || IdentityEntitlement.name=="detectedRoles"&lt;/Query&gt;<br />&#160;&#160;&#160;&lt;QueryParameters&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Parameter argument="identities" property="id"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;…<br />&#160;&#160;&#160;&lt;/QueryParameters&gt;<br />&lt;/DataSource&gt;</code></pre>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />OptionsRule or OptionsScript</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The final elements available on a filter datasource are an OptionsRule or OptionsScript. These can be used to make modifications to the QueryOptions before the query is run; they can also replace the rest of the query specification (for example, eliminating the need for a Query, QueryParameters, QueryScript or Join element) by simply constructing the whole queryOptions in the rule or script.</p>
                                                <p>Only one of these can be specified (the rule overrides the script if both are provided). The OptionsRule or OptionsScript is passed a SailPoint Context called “context”, a queryOptions called “options” and an argument map called “args”. Options contains the entire set of query criteria specified in any of the other elements (Query, QueryScript, QueryParameters, Join) and args contains the TaskDefinition argument map. The rule or script should append any additional custom queryOptions to options and return it.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;OptionsScript&gt;<br />&#160;&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;import java.util.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;import sailpoint.object.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;//code to add components to queryOptions goes here. e.g.: this would<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Apply to an Identity objectType and would get only Identities whose<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Manager is the Identity selected in the manager filter (typically,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;// an optionsScript or optionsRule would be used for a more complex<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;Filter myFilter = Filter.eq("manager.id", args.get("manager.id");<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;options.addFilter(myFilter);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;return options;<br />&#160;&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&#160;&lt;/OptionsScript&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <p>An OptionsRule is specified as a reference to a Rule object:</p><pre>&lt;OptionsRule&gt;</pre><pre>    &lt;Reference class="<code>sailpoint</code>.object.Rule" id="4028460238ed9b8e0138ed9beff90900" name="MyReport Options Rule"/&gt;&lt;/OptionsRule&gt;</pre>
                                            </div>
                                        </div>
                                        <h2>Java DataSource</h2>
                                        <p>A Java datasource is the next most commonly used report datasource type. The XML to specify this is fairly simple and straightforward; the java class it calls can be as simple or as complex as is required to generate the desired report contents.</p>
                                        <p>The java datasource class must implement the <b>sailpoint.reporting.datasource.JavaDataSource </b>interface, as described in the IdentityIQ javadocs. This interface defines all the methods that must be coded. All attributes in the taskDefinition attribute map (including all input attributes from the Signature) are passed to the Java class in an arguments map.</p>
                                        <p>The &lt;DataSource&gt; element in the XML specifies these attributes:</p>
                                        <p>&#160;</p>
                                        <table style="width: 575px;caption-side: top;mc-table-style: url('../zresources/tablestyles/standardtable.css');" class="TableStyle-StandardTable" cellspacing="0">
                                            <col class="TableStyle-StandardTable-Column-Column1" />
                                            <col class="TableStyle-StandardTable-Column-Column1" />
                                            <thead>
                                                <tr class="TableStyle-StandardTable-Head-Header1">
                                                    <td class="TableStyle-StandardTable-HeadE-Column1-Header1">
                                                        <p class="CellHeading">DataSource Attribute	</p>
                                                    </td>
                                                    <td class="TableStyle-StandardTable-HeadD-Column1-Header1">
                                                        <p class="CellHeading">Usage</p>
                                                    </td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-StandardTable-Body-Body1">
                                                    <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                        <p>dataSourceClass	</p>
                                                    </td>
                                                    <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                        <p>The fully qualified java class name</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-StandardTable-Body-Body2">
                                                    <td class="TableStyle-StandardTable-BodyE-Column1-Body2">
                                                        <p>objectType</p>
                                                    </td>
                                                    <td class="TableStyle-StandardTable-BodyD-Column1-Body2">
                                                        <p>	The primary object against which searches are performed in the java code</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-StandardTable-Body-Body1">
                                                    <td class="TableStyle-StandardTable-BodyE-Column1-Body1">
                                                        <p>type	</p>
                                                    </td>
                                                    <td class="TableStyle-StandardTable-BodyD-Column1-Body1">
                                                        <p>Java (tells the report executor this is a Java Datasource)</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-StandardTable-Body-Body2">
                                                    <td class="TableStyle-StandardTable-BodyB-Column1-Body2">
                                                        <p>defaultSort	</p>
                                                    </td>
                                                    <td class="TableStyle-StandardTable-BodyA-Column1-Body2">
                                                        <p>Optional field; sorts the returned data by the named field if no sort column is specified through the UI or taskDefinition attributes map</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <p class="note">Many of the standard reports were written with a Java Datasource and several examples of this syntax are available.   Most of the standard reports use a QueryParameters element to pass data to the DataSource, which allowed the report writer to take advantage of the reportHelper class in the reporting architecture to reuse existing code. However, this is not strictly necessary and isnot commonly done in the field.   Because the entire taskDefinition attributes map, including all input attributes from the &lt;Signature&gt;) is passed to the java class in an arguments map, they do not need to be specified as QueryParameters. The class can build the QueryOptions object needed to retrieve the data without passing the values through QueryParameters.</p>
                                        <h2>HQL DataSource</h2>
                                        <p>An HQL datasource is used in rare circumstances but is available for implementers who need to execute queries that hit Hibernate directly. This should only be used when the report developer is very knowledgeable about HQL. The HQL query must be custom written by the report developer.</p>
                                        <p>Like the Filter datasource, the HQL datasource can specify its query using these types of nested elements: Query, QueryScript, and QueryParameters. The Query and QueryParameters elements function somewhat differently in an HQL datasource, though, so it is important to understand the way they are processed.</p>
                                        <p>The Account Group Membership Totals Report provides an example of an HQL datasource. </p>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;LiveReport title="Account Group Membership Totals Report"&gt;<br />&#160;&#160;&#160;&lt;DataSource type="Hql"&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;Query&gt;from ManagedAttribute m where group=true&lt;/Query&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;QueryParameters&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Parameter argument="application" property="application_id"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;/QueryParameters&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;QueryScript&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;import java.util.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;List applications = args.get("application.id");<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (applications != null &amp;amp;&amp;amp; !applications.isEmpty()){<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;query = query + " and application.id in(:application_id) ";<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return query;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;/QueryScript&gt;<br />&#160;&#160;&#160;&lt;/DataSource&gt;<br />&#160;&#160;&#160;&lt;Columns&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ReportColumnConfig field="accountGroupName" header="rept_app_account_grp_memb_col_name" property="value" sortable="true"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ReportColumnConfig field="accountGroupDisplayName" header="rept_app_account_grp_display_name" property="displayName" sortable="true"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ReportColumnConfig field="application" header="rept_app_account_grp_memb_app" property="application.name" sortable="true"/&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ReportColumnConfig field="total" header="rept_app_account_grp_memb_col_members" property="(select count(*) from IdentityEntitlement ie where ie.value = m.value and ie.application = m.application and ie.name = m.attribute and ie.aggregationState = &amp;apos;Connected&amp;apos;)"/&gt;<br />&#160;&#160;&#160;&lt;/Columns&gt;<br />&lt;/LiveReport&gt;</code></pre>
                                            </div>
                                        </div>
                                        <p>&#160;</p>
                                        <p>In an HQL datasource, the &lt;Query&gt; element must specify the From clause for the query. The objectType is not required for an HQL datasource and is ignored if it is provided. </p>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Query</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The Query element can also specify some or all of the where clause. As on a Filter DataSource, the Query element can specify any hard-coded attribute evaluations (i.e. no variable substitution available) and multiple conditions can be specified with “and” or “or” relationships. </p><pre>      &lt;Query&gt;from ManagedAttribute m where group=true&lt;/Query&gt;</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />QueryScript</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The HQL DataSource &lt;QueryScript&gt; element works just like the Filter Datasource QueryScript. It contains beanshell that returns a filter string (appending to the Query's string and returning the combined string value). However, the difference in QueryParameter processing changes the way variables are processed in the script. The queryScript has access to the task argument map (in its “args” variable), so conditional processing can be done on those arguments in determining how to build the filter string. However, the contents of those variables do not need to be built into the actual query string in the queryScript; they can be referenced as variable names that are passed to the search through QueryParameters. In an HQL datasource, the search is performed based on the query string built in the query and queryScript elements; the parameters specified as QueryParameters are passed to the search method along with that query string and are substituted into the query where variable names are found.</p>
                                                <p>In the example below (from the Account Group Membership Totals Report), the QueryScript examines the application.id value from the args list and if it is non-null, it appends “and application.id in (:application_id) “ to the query string. The QueryParameter application_id allows the list of applications from the task argument list to be substituted for the :application_id variable in that query string when the search is executed.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;QueryParameters&gt;<br />&#160;&#160;&#160;&#160;&lt;Parameter argument="application" property="application_id"/&gt;<br />&lt;/QueryParameters&gt;<br />&lt;QueryScript&gt;<br />&#160;&#160;&#160;&#160;&lt;Source&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;import java.util.*;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;List applications = args.get("application.id");&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (applications != null &amp;amp;&amp;amp; !applications.isEmpty()){<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// :application_id<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;query = query + " and application.id in(:application_id) ";<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;return query;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&lt;/Source&gt;<br />&lt;/QueryScript&gt;</code></pre>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />QueryParameters</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>As explained in the QueryScript section above, the QueryParameters in an HQL datasource do not make up filter components in their own right but instead provide variables for substitution into the query string at the time the search is executed.</p>
                                                <p>The Parameter elements within the QueryParameters for an HQL datasource is usually only specified with an argument and a property. The property is the variable name used in the query string and the argument is the argument map key in which the value to be used in the search is stored. A defaultValue or a valueScript (as described in the Filter datasource's QueryParameters section) can also be used to provide the value for the property, if desired. The Parameter's QueryScript option (which returns a QueryOptions object) cannot be used for an HQL datasource, as it does not provide a value for substitution; HQL datasources do not use a QueryOptions object in their searches.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />ReportColumnConfigs</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>Just as with the other report types, the ReportColumnConfigs within the report's &lt;Columns&gt; element specify the attributes to retrieve from the query for display in the report detail grid - the “Select” portion of the query. The property attributes name the fields to retrieve. The final ReportColumnConfig - the “total” column - in the Account Group Membership Totals Report shows an example of how to include a sub query in the HQL select clause. This provides additional levels of flexibility in reflecting data on the report. A calculated field like this cannot be marked as sortable.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;ReportColumnConfig field="total" header="rept_app_account_grp_memb_col_members" property="(select count(*) from IdentityEntitlement ie where ie.value = m.value and ie.application = m.application and ie.name = m.attribute and ie.aggregationState = &amp;apos;Connected&amp;apos;)"/&gt;</code></pre>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>