<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_SP__Side_Nav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="Online">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Plugin Java Classes</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../zresources/tablestyles/breadcrumb_table.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-left.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/arrow-right.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/icon-print-gray.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../zresources/stylesheets/iiq_stylesheet.css" rel="stylesheet" type="text/css" />
        <script src="../resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../iiqlandingpage.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../zresources/tablestyles/breadcrumb_table.css');" class="TableStyle-Breadcrumb_Table" cellspacing="0">
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <col class="TableStyle-Breadcrumb_Table-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-Breadcrumb_Table-Body-Body1">
                                                <td class="TableStyle-Breadcrumb_Table-BodyB-Column1-Body1">
                                                    <div class="nocontent">
                                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="{title} topic link" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="TableStyle-Breadcrumb_Table-BodyA-Column1-Body1">
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: ;text-align: right;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img alt="Navigate previous" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img alt="Navigate next" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img alt="Print" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img alt="Expand all" src="../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="plugins_742352206_1962146"></a>Plugin Java Classes</h1>
                                        <p>Plugins are a powerful productivity-enabler, that give users the ability to extend both the IdentityIQ user interface and server in a well-defined manner.</p>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Plugin Java Classes - REST Classes</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The plugin framework relies heavily on REST web services integration for the majority of CRUD (create, read, update, and delete) operations. To create a custom REST Resource:</p>
                                                <ul>
                                                    <li>
                                                        <p>Extend the BasePluginResource class</p>
                                                    </li>
                                                    <li>
                                                        <p>Secure the new endpoints</p>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Extend BasePluginResource</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The BasePluginResource class should be used as the base class for all resources. It provides access to utility methods for accessing plugin settings, getting database connections, and more.</p>
                                                <ul>
                                                    <li>
                                                        <p><b>getConnection</b> - gets connection to the datasource specified in the <span class="code">iiq.properties</span> file for the plugins</p>
                                                    </li>
                                                    <li>
                                                        <p><b>getPluginName</b> - this method should be overwritten to return the correct name of the plugin</p>
                                                    </li>
                                                    <li>
                                                        <p><b>getSettingBool</b> - gets value of boolean plugin setting for plugin name returned by getPluginName()</p>
                                                    </li>
                                                    <li>
                                                        <p><b>getSettingInt</b> - gets value of int plugin setting for plugin name returned by getPluginName()</p>
                                                    </li>
                                                    <li>
                                                        <p><b>getSettingString</b> - gets value of String plugin setting for plugin name returned by getPluginName()</p>
                                                    </li>
                                                    <li>
                                                        <p><b>prepareStatement</b> - convenient security method for getting Java PreparedStatement object for any database queries that are required </p>
                                                    </li>
                                                    <ul>
                                                        <li>
                                                            <p>signature is <code>prepareStatement(Connection, String, Object...)</code> where the String would be the SQL statement you want to execute </p>
                                                        </li>
                                                        <li>
                                                            <p>Object...  a list of the parameters values, if any, to be used</p>
                                                        </li>
                                                    </ul>
                                                    <li>
                                                        <p><b>authorize</b> - should be overwritten by implementers, but by default only ensures that SystemAdministrator can see everything</p>
                                                    </li>
                                                </ul>
                                                <p>Introduce additional methods to handle the various endpoints required by the plugin.</p>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Plugin Java Classes - Plugin Executors</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>The plugin framework enables you to include custom task implementations or services with your plugin. These items rely on executor classes that contain the business logic for these services. The following executors are currently available:</p>
                                                <ul>
                                                    <li>
                                                        <p>Service Executors</p>
                                                    </li>
                                                    <li>
                                                        <p>Task Executors</p>
                                                    </li>
                                                    <li>
                                                        <p>Policy Executors</p>
                                                    </li>
                                                </ul>
                                                <p>You must specifically declare the classes to be exported for each of the executors. Only classes specifically declared are accessible from the rest of IdentityIQ. If a class is not declared, it will fail to instantiate when you open the plugin. Classes are declared in the <span class="code">manifest.xml</span> file. </p>
                                                <p>Use the following attributes to declare classes:</p>
                                                <ul>
                                                    <li>
                                                        <p>serviceExecutor</p>
                                                    </li>
                                                    <li>
                                                        <p>taskExecutor</p>
                                                    </li>
                                                    <li>
                                                        <p>policyExecutor</p>
                                                    </li>
                                                </ul>
                                                <p>For example:</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;entry key="taskExecutors"&gt;&#160;<br />&#160;&#160;&lt;value&gt;&#160;<br />&#160;&#160;&#160;&#160;&lt;List&gt;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;String&gt;com.acme.TaskExecutor1&lt;/String&gt;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;String&gt;com.acme.TaskExecutor2&lt;/String&gt;&#160;<br />&#160;&#160;&#160;&#160;&lt;/List&gt;&#160;<br />&#160;&#160;&lt;/value&gt;&#160;<br />&lt;/entry&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <h3>Plugin Object Properties</h3>
                                                <p>When defining your plugin object you must provide the list of service executors that are included. The list lives inside an attributes map under the key serviceExecutors.</p>
                                                <ul>
                                                    <li>
                                                        <p>Plugin Helper methods</p>
                                                    </li>
                                                    <li>
                                                        <p>All inherited Service methods</p>
                                                    </li>
                                                    <li>
                                                        <p>BasePluginTaskExecutor</p>
                                                    </li>
                                                    <li>
                                                        <p>Plugin Helper methods</p>
                                                    </li>
                                                    <li>
                                                        <p>All inherited TaskExecutor methods</p>
                                                    </li>
                                                    <li>
                                                        <p>BasePluginPolicyExecutor</p>
                                                    </li>
                                                    <li>
                                                        <p>Plugin Helper methods</p>
                                                    </li>
                                                    <li>
                                                        <p>All inherited PolicyExecutor methods.</p>
                                                    </li>
                                                </ul>
                                                <h3>Plugin Helper Methods</h3>
                                                <p>The list of methods that are included with the BasePlugin classes are as follows:</p>
                                                <ul>
                                                    <li>
                                                        <p>getPluginName() - returns a string value of the name of the plugin</p>
                                                    </li>
                                                    <li>
                                                        <p>getConnection() - returns a Connection object used to query the database</p>
                                                    </li>
                                                    <li>
                                                        <p>getSettingString(String settingName) - returns a String setting value from the Plugin Settings</p>
                                                    </li>
                                                    <li>
                                                        <p>getSettingBool( String settingName) - returns a boolean value from the Plugin Settings</p>
                                                    </li>
                                                    <li>
                                                        <p>getSettingInt(String settingName) - returns a integer value from the Plugin Settings</p>
                                                    </li>
                                                </ul>
                                                <p>You can think of the BasePlugin classes as foundation for creating your specific objects. By using them you gain access to the Plugin Helper Methods, but you are not required to use the BasePlugin classes. You can extend directly from the parent class object.</p>
                                                <h3>Implementing a Plugin Service Definition</h3>
                                                <p>To implement a Plugin Service there are two parts. The service class, containing the business logic that you want the service to actually do, and the service definition xml, that is loaded into IdentityIQ.</p>
                                                <ul>
                                                    <li>
                                                        <p>BasePluginService Class — an abstract class that extends the Service class, as well as implements the PluginContext interface. You can use this class as the foundation for your custom Plugin Service</p>
                                                    </li>
                                                    <li>
                                                        <p>Service Definition — specify a pluginName attribute. This tells IdentityIQ to use the plugin class loader for this executor. If this attribute is not specified the executor class will not be found</p>
                                                    </li>
                                                </ul>
                                                <h3>Implementing a Plugin Task Executor</h3>
                                                <p>To implement a Plugin Task Executor there are have two parts. The Task Executor class, which handles the business logic for your task, and the TaskDefinition xml object, which gets loaded into IdentityIQ.</p>
                                                <ul>
                                                    <li>
                                                        <p>BasePluginTaskExecutor Class — an abstract class that extends the AbstractTaskExecutor class, as well as implements the PluginContext interface. You can use this class as the foundation for your custom Plugin Executor task</p>
                                                    </li>
                                                    <li>
                                                        <p>TaskDefinition — include the pluginName attribute, as this attribute tells IdentityIQ to use the plugin class loader instead of default class loader. If the attribute is not specified the executor class will not be found</p>
                                                    </li>
                                                </ul>
                                                <h3>Implementing a Policy Executor</h3>
                                                <p>To implement a Policy Executor there are have two parts. The Policy Executor class, which handles the business logic for your policy, and the Policy xml object, which gets loaded into IdentityIQ.</p>
                                                <ul>
                                                    <li>
                                                        <p>BasePluginPolicyExecutor Class — an abstract class that extends the AbstractPolicyExecutor class, as well as implements the PluginContext interface. You can use this class as the foundation for your custom Plugin Policy Executor</p>
                                                    </li>
                                                    <li>
                                                        <p>Policy XML — include the pluginName attribute, as this attribute tells IdentityIQ to use the plugin class loader instead of default class loader. If the attribute is not specified the executor class will not be found.</p>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Plugin Java Classes - Script Classes</a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p class="note">BeanShell executions are referred to as scripting in this document.</p>
                                                <p>The classes installed for plugins can be made available to all BeanShell executions. BeanShell (rules, scriptlets, workflows) scripting invocations are able to use all Java classes, from all plugins, that are declared as exported for scripting. The scripts should fail to load classes which are in plugins, but which are not explicitly exported.</p>
                                                <p>BeanShell executions include:</p>
                                                <ul>
                                                    <li>
                                                        <p>rules</p>
                                                    </li>
                                                    <li>
                                                        <p>workflow steps (rules and scripts)</p>
                                                    </li>
                                                    <li>
                                                        <p>scriptlets</p>
                                                    </li>
                                                </ul>
                                                <p>Use the scriptPackages attribute to declare the Java packages exported for use by scripts as follows:</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;entry key="scriptPackages"&gt;&#160;<br />&#160;&#160;&lt;value&gt;&#160;<br />&#160;&#160;&#160;&#160;&lt;List&gt;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&lt;String&gt;com.acme.classy.util&lt;/String&gt;&#160;<br />&#160;&#160;&#160;&#160;&lt;/List&gt;&#160;<br />&#160;&#160;&lt;/value&gt;&#160;<br />&lt;/entry&gt;</code></pre>
                                                    </div>
                                                </div>
                                                <h3>Example: Using Plugin Classes From a Rule</h3>
                                                <p>This is a simple example of how to call the plugin classes from a rule.</p>
                                                <p>The example Java class named <span class="code">com.acme.classy.util.ClassyUtil</span> can be used from a rule if declared properly in the <span class="code">manifest.xml</span> using the <span class="code">scriptPackages</span> entry shown above.</p>
                                                <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                                    <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>&lt;?xml version='1.0' encoding='UTF-8'?&gt;<br />&lt;!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd"&gt;<br />&lt;Rule language="beanshell" name="ClassyRule" &gt;<br />&#160;&#160;&lt;Description&gt;Returns the current timestamp by calling class from<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ClassyPlugin&lt;/Description&gt;<br />&#160;&#160;&lt;Signature returnType="string"/&gt;<br />&#160;&#160;&lt;Source&gt;<br />import com.acme.classy.util.ClassyUtil;<br />long now = ClassyUtil.now();<br />return "The current timestamp is: " + now;<br />&#160;&lt;/Source&gt;<br />&lt;/Rule&gt;</code></pre>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>